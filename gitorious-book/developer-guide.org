#+TITLE:     Gitorious developer guide
#+LINK_UP:   index.html
#+LINK_HOME: /


* Gitorious developer guide
** Contributing to Gitorious
*** Bug reports

Found a bug or annoyance? Please let the maintainers know via the official
issuetracker at [[https://issues.gitorious.org/][https://issues.gitorious.org/]].

*** Hacking on Gitorious
**** TODO Setting up your development environment

Howto: Set up enough dependencies and code locally to run the Gitorious test suite.

**** TODO Deploying and testing your code in a "cleanroom" VM

Howto: Deploy and test your code in a basic gitorious community edition VM

**** Coding styleguide

As Gitorious is a codebase of decent size (by Ruby standards at
least), we try to adhere to a few guidelines to keep the codebase
clean.

The number one takeaway is that there's some level of flexibility in
the "rules" outlined below, but the most important thing is that your
code _should look good_ and be easily _readable_ and _understandable_
for everyone else. The Gitorious codebase has its dark corners,
possibly filled with dragons, but we try to improve things as we see
them. "Leave the source in a better state than you found it" is solid
advice.

Pay attention to what you commit; always review pending changes with
`git diff --staged` and look for things that violates the outlines
below (git is being helpful and highlights some things, such as
trailing whitespace).

In general, try to follow the style of the existing code, and pay
attention to how the code you're writing _actually looks_, not just
how it works.

***** General Guidelines

- Lines should stay below 80 chars or so.
- No tabs.
- Don't get too clever.
- No trailing whitespace

***** Ruby

Generally the points in Christian Neukirchens
[[RUBY-STYLE][http://github.com/chneukirchen/styleguide/raw/master/RUBY-STYLE]] apply.

***** Javascript

- 4 spaces, no tabs
- 80 chars or less line length
- Local variables must use the `var` keyword
- Use (one) blank line to group statements together where suited
- Always use a single space after a keyword, and before a curly brace.
- Curly braces goes on the same line

#+begin_src javascript
    // Wrong
    function foo (arg){
    // Wrong
    function foo(arg)
    {
    // Correct
    function foo(arg) {
#+end_src


The same applies for conditionals:

#+begin_src javascript
    // Wrong
    if (arg){
    // Wrong
    if(arg)
    {
    // Correct
    if foo(arg) {
        ...
    } else {
        ...
    }
#+end_src

One possible exception to the above is if the conditionals argument is
wrapped on multiple lines, the brace can be placed on a new line to
ease readability of the conditional body:

#+begin_src javascript
     if ((foo && barIsJustAWordUsedforDemonstrations) ||
         kittensAreFluffy && doesNotSayWoof)
     {
         ...
     }
#+end_src

However, long boolean expressions should be avoided in the first place.

***** CSS

- four space indent
- no tabs
- multiple selectors on seperate lines, unless singleworded

#+begin_src css
     /* wrong */
    \#foo #bar div.foo, #baz p#quux span.foo {
        ...
    }
    /* Correct */
    \#foo #bar div.foo,
    \#baz p#quux span.foo {
        ...
    }
#+end_src


- Opening brace on the same line as the selector

***** HTML

- 2 spaces indendation
- No tabs
- Prefer to indent deep nesting on a newline+indent, so the structure is easier to follow

**** Branching model

Gitorious uses
[the git-flow branching model](http://nvie.com/posts/a-successful-git-branching-model/)
for branching. This means that the master branch is stable, and is
only merged to once a feature has been completed.

New features are created in feature branches (named `feature/$name`)
and then merged into the `next` branch once finished. Such features
arrive in `master` as new releases.

When contributing new features into Gitorious as merge requests, these
should be started the `next` branch, and marked as such when proposed.

The exception to this is hotfixes, which may be started from and
proposed merged into `master`. Please note that hotfixes should not
implement new functionality.

*** Don't have time yourself? Fund new features!

If your company has urgent need of new features/modifications in
Gitorious, please get in touch with the core contributors via
team@gitorious.org for funding development of your proposed features.
