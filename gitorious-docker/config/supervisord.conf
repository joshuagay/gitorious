[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)

[supervisord]
nodaemon=true                ; (start in foreground if true;default false)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket

[program:nginx]
command=/usr/sbin/nginx
autostart=true
autorestart=true
startsecs=3

[program:sshd]
command=/usr/sbin/sshd -D
autostart=true
autorestart=true
startsecs=5

[program:redis]
command=/usr/bin/redis-server
autostart=true
autorestart=true
startsecs=5

[program:memcached]
command=/usr/bin/memcached
autostart=true
autorestart=true
startsecs=2
user=git

[program:gitorious-unicorn]
command=bundle exec unicorn -c config/unicorn.rb
autostart=true
autorestart=true
startsecs=20
user=git
directory=/srv/gitorious/app
environment=HOME="/home/git"
;stdout_logfile=/tmp/unicorn.stdout.log
;stderr_logfile=/tmp/unicorn.stderr.log

[program:gitorious-resque-worker]
command=sh -c "./script/regenerate_ssh_keys /home/git/.ssh/authorized_keys && exec bundle exec rake resque:work"
autostart=true
autorestart=true
startsecs=20
user=git
directory=/srv/gitorious/app
environment=QUEUE="*",INTERVAL="0.1",HOME="/home/git"
stopsignal=QUIT
stopwaitsecs=60
;stdout_logfile=/tmp/resque-worker.stdout.log
;stderr_logfile=/tmp/resque-worker.stderr.log

[program:sphinx]
command=bundle exec rake ts:start_in_foreground
autostart=true
autorestart=true
startsecs=20
user=git
directory=/srv/gitorious/app
environment=HOME="/home/git"
;stdout_logfile=/tmp/sphinx.stdout.log
;stderr_logfile=/tmp/sphinx.stderr.log

[program:git-daemon]
command=/usr/bin/git daemon --listen=0.0.0.0 --syslog --export-all --base-path=/var/lib/gitorious/data/repositories --verbose --reuseaddr /var/lib/gitorious/data/repositories
autostart=true
autorestart=true
user=git
;stdout_logfile=/tmp/git-daemon.stdout.log
;stderr_logfile=/tmp/git-daemon.stderr.log
